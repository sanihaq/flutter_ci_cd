name: Flutter Actions

on:
  push:
    branches: [ master ]
    tags:
      - "Release:*"

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Fetch tags for GitVersion
      run: git fetch --tags

    - name: Fetch master for GitVersion
      if: github.ref != 'refs/heads/master'
      run: git branch --create-reflog master origin/master

    - name: GitVersion
      id: gitversion  # step id used as reference for output values
      uses: roryprimrose/rungitversion@v1.0.0
      - name: Output version values 
      run: |
        echo "Major: ${{ steps.gitversion.outputs.Major }}"
        echo "Minor: ${{ steps.gitversion.outputs.Minor }}"
        echo "Patch: ${{ steps.gitversion.outputs.Patch }}"
        echo "PreReleaseTag: ${{ steps.gitversion.outputs.PreReleaseTag }}"
        echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.PreReleaseTagWithDash }}"
        echo "PreReleaseLabel: ${{ steps.gitversion.outputs.PreReleaseLabel }}"
        echo "PreReleaseNumber: ${{ steps.gitversion.outputs.PreReleaseNumber }}"
        echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.WeightedPreReleaseNumber }}"
        echo "BuildMetaData: ${{ steps.gitversion.outputs.BuildMetaData }}"
        echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.BuildMetaDataPadded }}"
        echo "FullBuildMetaData: ${{ steps.gitversion.outputs.FullBuildMetaData }}"
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
        echo "SemVer: ${{ steps.gitversion.outputs.SemVer }}"
        echo "LegacySemVer: ${{ steps.gitversion.outputs.LegacySemVer }}"
        echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.LegacySemVerPadded }}"
        echo "AssemblySemVer: ${{ steps.gitversion.outputs.AssemblySemVer }}"
        echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.AssemblySemFileVer }}"
        echo "FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}"
        echo "InformationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}"
        echo "BranchName: ${{ steps.gitversion.outputs.BranchName }}"
        echo "Sha: ${{ steps.gitversion.outputs.Sha }}"
        echo "ShortSha: ${{ steps.gitversion.outputs.ShortSha }}"
        echo "NuGetVersionV2: ${{ steps.gitversion.outputs.NuGetVersionV2 }}"
        echo "NuGetVersion: ${{ steps.gitversion.outputs.NuGetVersion }}"
        echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.NuGetPreReleaseTagV2 }}"
        echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.NuGetPreReleaseTag }}"
        echo "VersionSourceSha: ${{ steps.gitversion.outputs.VersionSourceSha }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.CommitsSinceVersionSourcePadded }}"
        echo "CommitDate: ${{ steps.gitversion.outputs.CommitDate }}"

    - name: Create version.txt with nuGetVersion
      run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
    - name: Upload version.txt
      uses: actions/upload-artifact@v2
      with:
        name: gitversion
        path: version.txt

  # build-linux:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: '12.x'
  #     - uses: subosito/flutter-action@v1
  #     - run: flutter pub get
  #     - run: flutter test
  #     - run: flutter build apk
  #     - run: flutter build appbundle
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: android
  #         path: |
  #           ./build/app/outputs/apk/release/app-release.apk
  #           ./build/app/outputs/bundle/release/app-release.aab
  #         retention-days: 1
  #     # for later use
  #     # - name: build web
  #     #   uses: erickzanardo/flutter-gh-pages@v3

  # build-windows:
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v1
  #     - run: flutter config --enable-windows-desktop
  #     - run: flutter build windows
  #     # - run: flutter pub run msix:create
  #     - name: 'Tar files'
  #       run: tar -cvf flutter_ci_cd_windows.tar build/windows/runner/release
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: windows
  #         path: |
  #           flutter_ci_cd_windows.tar
  #           ./build/windows/runner/release/
  #         retention-days: 1
  
  # build-mac:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: subosito/flutter-action@v1
  #   - run: flutter pub get
  #   - run: flutter test
  #   - run: flutter build ios --release --no-codesign

  # release:
  #   needs: [ build-linux, build-windows ]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Bump version and push tag
  #       id: bump
  #       uses: minddocdev/mou-version-action@v1.0.0
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #     - uses: actions/download-artifact@v2
  #       with:
  #         path: artifacts
          
  #     - name: Release
  #       uses: "marvinpinto/action-automatic-releases@latest"
  #       with:
  #         repo_token: "${{ secrets.GITHUB_TOKEN }}"
  #         automatic_release_tag: "${{ steps.bump.outputs.version }}"
  #         prerelease: true
  #         title: "Development Build"
  #         files: |
  #           ./artifacts/android/apk/release/app-release.apk
  #           ./artifacts/android/bundle/release/app-release.aab
  #           ./artifacts/windows/flutter_ci_cd_windows.tar
  #           LICENSE.txt
